{"ast":null,"code":"var _jsxFileName = \"/home/wild/Documents/WildCircus/frontend/src/Components/Contact/Contact.jsx\";\nimport React from \"react\";\nimport { Button, Form, FormGroup, Label, Input, Modal, ModalHeader, ModalBody, ModalFooter } from \"reactstrap\";\nimport \"./Contact.css\";\nimport Upload from \"./UploadFile.jsx\";\nimport axios from \"axios\";\n\nclass Contact extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.sendMail = () => {\n      axios.post(\"http://localhost:8088/contact\", {\n        name: this.state.name,\n        email: this.state.email,\n        subject: this.state.subject,\n        message: this.state.message,\n        file: this.state.file\n      });\n    };\n\n    this.state = {\n      modal: false,\n      name: \"\",\n      email: \"\",\n      subject: \"\",\n      message: \"\",\n      file: \"\"\n    };\n    this.toggle = this.toggle.bind(this);\n  }\n\n  toggle() {\n    this.setState(prevState => ({\n      modal: !prevState.modal\n    }));\n  }\n\n  onInputChange(e) {\n    this.setState({\n      [e.target.name]: e.target.value\n    });\n  }\n\n  submit() {\n    const _this$state = this.state,\n          name = _this$state.name,\n          email = _this$state.email,\n          subject = _this$state.subject,\n          message = _this$state.message;\n\n    if (name !== \"\" && email !== \"\" && message !== \"\") {\n      if (this.state.email.includes(\"@\")) {\n        axios.post(\"\".concat(serverAddress, \"contact\"), {\n          name: this.state.name,\n          email: this.state.email,\n          message: this.state.message,\n          subject: this.state.subject\n        });\n        this.setState({\n          name: \"\",\n          email: \"\",\n          message: \"\"\n        });\n        this.toggle();\n        this.toggle2();\n      } else {\n        this.EmptyFieldMail();\n      }\n    } else {\n      this.EmptyField();\n    }\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"contactButton\",\n      onClick: () => this.toggle(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, \"Contact Us\"), React.createElement(Modal, {\n      isOpen: this.state.modal,\n      toggle: this.toggle,\n      className: this.props.className,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, React.createElement(ModalHeader, {\n      toggle: this.toggle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, \"Contact Us\"), React.createElement(ModalBody, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, React.createElement(Form, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, React.createElement(FormGroup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, React.createElement(Label, {\n      for: \"exampleEmail\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, \"Name\"), React.createElement(Input, {\n      type: \"name\",\n      name: \"name\",\n      id: \"exampleName\",\n      placeholder: \"put your name here\",\n      onChange: e => this.onInputChange(e),\n      value: this.state.name,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    })), React.createElement(FormGroup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }, React.createElement(Label, {\n      for: \"exampleEmail\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }, \"Email\"), React.createElement(Input, {\n      type: \"email\",\n      name: \"email\",\n      id: \"exampleEmail\",\n      placeholder: \"put your email here\",\n      onChange: e => this.onInputChange(e),\n      value: this.state.email,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    })), React.createElement(FormGroup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }, React.createElement(Label, {\n      for: \"exampleSelect\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }, \"Select\"), React.createElement(Input, {\n      type: \"select\",\n      name: \"select\",\n      id: \"exampleSelect\",\n      onChange: e => this.onInputChange(e),\n      value: this.state.subject,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    }, React.createElement(\"option\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      },\n      __self: this\n    }, \"Why do you want to contact us ?\"), React.createElement(\"option\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121\n      },\n      __self: this\n    }, \"I want a payback\"), React.createElement(\"option\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    }, \"I had a problem with the Circus\"), React.createElement(\"option\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    }, \"I've lost something\"), React.createElement(\"option\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124\n      },\n      __self: this\n    }, \"Else\"))), React.createElement(FormGroup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127\n      },\n      __self: this\n    }, React.createElement(Label, {\n      for: \"exampleText\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128\n      },\n      __self: this\n    }, \"You can explain us everything\"), React.createElement(Input, {\n      type: \"textarea\",\n      name: \"text\",\n      id: \"exampleText\",\n      placeholder: \"Explain everything here\",\n      onChange: e => this.onInputChange(e),\n      value: this.state.message,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129\n      },\n      __self: this\n    })), React.createElement(FormGroup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138\n      },\n      __self: this\n    }, React.createElement(Upload, {\n      onChange: e => this.onInputChange(e),\n      value: this.state.file,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139\n      },\n      __self: this\n    })))), React.createElement(ModalFooter, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146\n      },\n      __self: this\n    }, React.createElement(Button, {\n      onClick: () => this.sendMail(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147\n      },\n      __self: this\n    }, \"Send\"), React.createElement(Button, {\n      color: \"secondary\",\n      onClick: this.toggle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148\n      },\n      __self: this\n    }, \"Cancel\"))));\n  }\n\n}\n\nexport default Contact;","map":{"version":3,"sources":["/home/wild/Documents/WildCircus/frontend/src/Components/Contact/Contact.jsx"],"names":["React","Button","Form","FormGroup","Label","Input","Modal","ModalHeader","ModalBody","ModalFooter","Upload","axios","Contact","Component","constructor","props","sendMail","post","name","state","email","subject","message","file","modal","toggle","bind","setState","prevState","onInputChange","e","target","value","submit","includes","serverAddress","toggle2","EmptyFieldMail","EmptyField","render","className"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport {\n  Button,\n  Form,\n  FormGroup,\n  Label,\n  Input,\n  Modal,\n  ModalHeader,\n  ModalBody,\n  ModalFooter\n} from \"reactstrap\";\nimport \"./Contact.css\";\nimport Upload from \"./UploadFile.jsx\";\nimport axios from \"axios\";\n\nclass Contact extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      modal: false,\n      name: \"\",\n      email: \"\",\n      subject: \"\",\n      message: \"\",\n      file: \"\"\n    };\n\n    this.toggle = this.toggle.bind(this);\n  }\n\n  toggle() {\n    this.setState(prevState => ({\n      modal: !prevState.modal\n    }));\n  }\n  sendMail = () => {\n    axios.post(`http://localhost:8088/contact`, {\n      name: this.state.name,\n      email: this.state.email,\n      subject: this.state.subject,\n      message: this.state.message,\n      file: this.state.file\n    });\n  };\n  onInputChange(e) {\n    this.setState({\n      [e.target.name]: e.target.value\n    });\n  }\n  submit() {\n    const { name, email, subject, message } = this.state;\n    if (name !== \"\" && email !== \"\" && message !== \"\") {\n      if (this.state.email.includes(\"@\")) {\n        axios.post(`${serverAddress}contact`, {\n          name: this.state.name,\n          email: this.state.email,\n          message: this.state.message,\n          subject: this.state.subject\n        });\n        this.setState({\n          name: \"\",\n          email: \"\",\n          message: \"\"\n        });\n        this.toggle();\n        this.toggle2();\n      } else {\n        this.EmptyFieldMail();\n      }\n    } else {\n      this.EmptyField();\n    }\n  }\n  render() {\n    return (\n      <div>\n        <div className=\"contactButton\" onClick={() => this.toggle()}>\n          Contact Us\n        </div>\n        <Modal\n          isOpen={this.state.modal}\n          toggle={this.toggle}\n          className={this.props.className}\n        >\n          <ModalHeader toggle={this.toggle}>Contact Us</ModalHeader>\n          <ModalBody>\n            <Form>\n              <FormGroup>\n                <Label for=\"exampleEmail\">Name</Label>\n                <Input\n                  type=\"name\"\n                  name=\"name\"\n                  id=\"exampleName\"\n                  placeholder=\"put your name here\"\n                  onChange={e => this.onInputChange(e)}\n                  value={this.state.name}\n                />\n              </FormGroup>\n              <FormGroup>\n                <Label for=\"exampleEmail\">Email</Label>\n                <Input\n                  type=\"email\"\n                  name=\"email\"\n                  id=\"exampleEmail\"\n                  placeholder=\"put your email here\"\n                  onChange={e => this.onInputChange(e)}\n                  value={this.state.email}\n                />\n              </FormGroup>\n              <FormGroup>\n                <Label for=\"exampleSelect\">Select</Label>\n                <Input\n                  type=\"select\"\n                  name=\"select\"\n                  id=\"exampleSelect\"\n                  onChange={e => this.onInputChange(e)}\n                  value={this.state.subject}\n                >\n                  <option>Why do you want to contact us ?</option>\n                  <option>I want a payback</option>\n                  <option>I had a problem with the Circus</option>\n                  <option>I've lost something</option>\n                  <option>Else</option>\n                </Input>\n              </FormGroup>\n              <FormGroup>\n                <Label for=\"exampleText\">You can explain us everything</Label>\n                <Input\n                  type=\"textarea\"\n                  name=\"text\"\n                  id=\"exampleText\"\n                  placeholder=\"Explain everything here\"\n                  onChange={e => this.onInputChange(e)}\n                  value={this.state.message}\n                />\n              </FormGroup>\n              <FormGroup>\n                <Upload\n                  onChange={e => this.onInputChange(e)}\n                  value={this.state.file}\n                />\n              </FormGroup>\n            </Form>\n          </ModalBody>\n          <ModalFooter>\n            <Button onClick={() => this.sendMail()}>Send</Button>\n            <Button color=\"secondary\" onClick={this.toggle}>\n              Cancel\n            </Button>\n          </ModalFooter>\n        </Modal>\n      </div>\n    );\n  }\n}\n\nexport default Contact;\n"]},"metadata":{},"sourceType":"module"}